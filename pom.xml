<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.signal.storage</groupId>
    <artifactId>StorageService</artifactId>
    <version>JGITVER</version>

    <properties>
        <dropwizard.version>2.0.21</dropwizard.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <configuration.path>config</configuration.path>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-dependencies</artifactId>
                <version>${dropwizard.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-bom</artifactId>
                <version>1.5.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-auth</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>2.3.5</version>
        </dependency>
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-bigtable</artifactId>
            <version>2.6.0</version>
        </dependency>
        <dependency>
            <groupId>org.syslog4j</groupId>
            <artifactId>syslog4j</artifactId>
            <version>0.9.30</version>
        </dependency>
        <dependency>
            <groupId>org.whispersystems</groupId>
            <artifactId>libsignal-server</artifactId>
            <version>0.14.0</version>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>7.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.coursera</groupId>
            <artifactId>dropwizard-metrics-datadog</artifactId>
            <version>2.0.0-RC2</version>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-testing</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-datadog</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>4.3.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-bigtable-emulator</artifactId>
            <version>0.142.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.21.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.1</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>templating-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>filter-src</id>
                        <goals>
                            <goal>filter-sources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>org.signal.storageservice.StorageService</mainClass>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-install-plugin</artifactId>
              <version>3.0.0-M1</version>
              <configuration>
                <skip>true</skip>
              </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>

                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:3.12.2:exe:${os.detected.classifier}</protocArtifact>
                </configuration>

                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker-deploy</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <file><exists>${configuration.path}/build.properties</exists></file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0.0</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>${configuration.path}/build.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>1.4.8</version>
                        <executions>
                            <execution>
                                <id>production</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <repository>${docker.repo.production}</repository>
                                    <pullNewerImage>false</pullNewerImage>
                                    <tag>${project.version}-production</tag>
                                    <buildArgs>
                                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                        <CONFIG_FILE>production.yml</CONFIG_FILE>
                                    </buildArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>staging</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <repository>${docker.repo.staging}</repository>
                                    <pullNewerImage>false</pullNewerImage>
                                    <tag>${project.version}-staging</tag>
                                    <buildArgs>
                                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                        <CONFIG_FILE>staging.yml</CONFIG_FILE>
                                    </buildArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
          <id>appengine-deploy</id>
          <activation>
            <activeByDefault>false</activeByDefault>
            <file><exists>${configuration.path}/build.properties</exists></file>
          </activation>
          <build>
           <plugins>
             <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>properties-maven-plugin</artifactId>
               <version>1.0.0</version>
               <executions>
                 <execution>
                   <phase>initialize</phase>
                   <goals>
                     <goal>read-project-properties</goal>
                   </goals>
                   <configuration>
                     <files>
                       <file>${configuration.path}/build.properties</file>
                     </files>
                   </configuration>
                 </execution>
               </executions>
             </plugin>
             <plugin>
               <groupId>com.google.cloud.tools</groupId>
               <artifactId>appengine-maven-plugin</artifactId>
               <version>2.4.0</version>
               <executions>
                 <execution>
                   <id>staging</id>
                   <goals>
                     <goal>deployAll</goal>
                   </goals>
                   <configuration>
                     <appEngineDirectory>${configuration.path}/appengine-staging</appEngineDirectory>
                     <projectId>${appengine.projectid.staging}</projectId>
                     <imageUrl>${docker.repo.staging}:${project.version}-staging</imageUrl>
                     <version>GCLOUD_CONFIG</version>
                   </configuration>
                 </execution>
                 <execution>
                   <id>production</id>
                   <phase>none</phase>
                   <goals>
                     <goal>deployAll</goal>
                   </goals>
                   <configuration>
                     <appEngineDirectory>${configuration.path}/appengine-production</appEngineDirectory>
                     <projectId>${appengine.projectid.production}</projectId>
                     <imageUrl>${docker.repo.production}:${project.version}-production</imageUrl>
                     <version>GCLOUD_CONFIG</version>
                   </configuration>
                 </execution>
               </executions>
             </plugin>
           </plugins>
          </build>
        </profile>
    </profiles>

</project>
